const { Telegraf, Markup, Scenes, session } = require("telegraf");
const { startMessageKeyboard, mainMenuKeyboard, moreMenuKeyboard } = require("./keyboards");

const { onlyVoiceScene, interviewScene, weatherScene, reminderScene, attendanceScene } = require('./scenes.js')

const bot = new Telegraf("6261984727:AAGhPHUCp-Xe5MefNiyz24DSrWencl3ULR8");

const stage = new Scenes.Stage([onlyVoiceScene, interviewScene, weatherScene, reminderScene, attendanceScene]);
bot.use(session());
bot.use(stage.middleware());

async function startMessage(ctx) {
    await ctx.replyWithHTML(`<i>üëã–ü—Ä–∏–≤–µ—Ç,  <b>${ctx.from.first_name}</b>\nü§ñ–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞</i>`, {
        reply_markup: {
            inline_keyboard: startMessageKeyboard,
        }
    });
    await ctx.replyWithHTML('<b>‚å®Ô∏è–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!</b>', mainMenuKeyboard)
}

bot
    .command("start", async (ctx) => {
        startMessage(ctx);
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –Ω–∞–ø–∏—Å–∞–ª /start`, {
            parse_mode: 'HTML'
        })
    })

    .action("testingButton", async (ctx) => {
        ctx.replyWithHTML(
            "<b>üóí–°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:\n\n</b><i>1. </i><b>https://software-testing.ru/forum/</b><i>\n–§–æ—Ä—É–º —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤, –Ω–∏—á–µ–≥–æ –±–æ–ª–µ–µ\n\n</i><i>2. </i><b>https://habr.com/ru/companies/habr_career/articles/517812/</b><i>\n–°—Ç–∞—Ç—å—è –Ω–∞ —Ö–∞–±—Ä–µ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</i>"
        );

        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`, {
            parse_mode: 'HTML'
        })
    })

    .action("programmingButton", async (ctx) => {
        ctx.replyWithHTML(
            "<b>üóí–°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é:\n\n</b><i>1. </i><b>https://ru.stackoverflow.com/tour</b><i>\n–ó–¥–µ—Å—å –¥–∞–∂–µ —Å–∫–∞–∑–∞—Ç—å –Ω–µ—á–µ–≥–æ. –°–∫–ª–∞–¥ —É–º–æ–≤, –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ó–∞–ø–æ–≤–µ–¥–∏.\n\n</i><i>2. </i><b>https://ru.hexlet.io/courses/introduction_to_programming</b>\n<i>–í–≤–æ–¥–Ω—ã–π –∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n</i>\n<i>3.</i> <b>https://habr.com/ru/hub/programming/</b><i>\n–¢–æ–ø–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ —Ö–∞–±—Ä–µ</i>"
        );
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ`, {
            parse_mode: 'HTML'
        })
    })

    .action("aiButton", async (ctx) => {
        ctx.replyWithHTML(
            "<b>üóí–°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã—Ö –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É:\n\n</b><i>1. </i><b>https://habr.com/ru/hub/artificial_intelligence/</b><i>\n–°—Ç–∞—Ç—å—è –Ω–∞ —Ö–∞–±—Ä–µ –æ–± –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ\n\n</i><i>2. </i><b>https://ru.wikipedia.org/wiki/–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π_–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç</b>\n<i>–°—Ç–∞—Ç—å—è –Ω–∞ –≤–∏–∫–∏–ø–µ–¥–∏–∏</i>"
        );
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ò–ò`, {
            parse_mode: 'HTML'
        })
    })

    .action("moreButton", async (ctx) => {
        try {
            const message = ctx.callbackQuery.message;
            const currentKeyboard = message.reply_markup;
            if (currentKeyboard) {
                // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                await ctx.editMessageReplyMarkup(null);
            }
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await ctx.editMessageText(
                "üñ•<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º</b>",
                {
                    parse_mode: "html",
                    reply_markup: {
                        inline_keyboard: moreMenuKeyboard,
                    },
                }
            );
            await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –æ—Ç–∫—Ä—ã–ª –¥–æ–ø –º–µ–Ω—é`, {
                parse_mode: 'HTML'
            })
        } catch (error) {
            console.log(error);
        }
    })

    .action("goToMainMenu", async (ctx) => {
        try {
            const message = ctx.callbackQuery.message;
            const currentKeyboard = message.reply_markup;
            if (currentKeyboard) {
                // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                await ctx.editMessageReplyMarkup(null);
            }
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await ctx.editMessageText(`<i>üëã–ü—Ä–∏–≤–µ—Ç,  <b>${ctx.from.first_name}</b>\n‚å®Ô∏è–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞\n<b>üçÄ–£–¥–∞—á–∏!</b></i>`,
                {
                    parse_mode: "html",
                    reply_markup: {
                        inline_keyboard: startMessageKeyboard,
                    },
                }
            );
            await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –≤–µ—Ä–Ω—É–ª—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é`, {
                parse_mode: 'HTML'
            })
        } catch (error) {
            console.log(error);
        }
    })

    .action("removeKeyboard", async (ctx) => {
        const options = {
            reply_markup: {
                remove_keyboard: true,
            },
        };
        bot.telegram
            .sendMessage(ctx.from.id, "üîÑ–ó–∞–≥—Ä—É–∑–∫–∞...", options)
            .then((sentMessage) => {
                const messageId = sentMessage.message_id;

                // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                bot.telegram.deleteMessage(ctx.chat.id, messageId);
            });
        ctx.replyWithHTML('<b>‚å®Ô∏è–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞</b>\n<i>–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –µ—ë, –Ω–∞–ø–∏—à–∏—Ç–µ</i> <b>/start</b>')
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> —É–¥–∞–ª–∏–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É`, {
            parse_mode: 'HTML'
        })
    })

    .hears('üé§–†–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è', async (ctx) => {
        ctx.scene.enter('onlyVoiceScene');
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –ø–µ—Ä–µ—à—ë–ª –≤ —Ä–µ–∂–∏–º —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π`, {
            parse_mode: 'HTML'
        })
    })
    
    .hears('üòÄ–ü—Ä–æ–π—Ç–∏ –∏–Ω—Ç–µ—Ä–≤—å—é', async (ctx) => {
        ctx.scene.enter('interviewScene')
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –ø–µ—Ä–µ—à—ë–ª –≤ —Ä–µ–∂–∏–º –∏–Ω—Ç–µ—Ä–≤—å—é`, {
            parse_mode: 'HTML'
        })
    })

    .action('weatherButton', async (ctx) => {
        ctx.scene.enter('weatherScene')
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –æ—Ç—Ä–∫—ã–ª –º–µ–Ω—é –ø–æ–≥–æ–¥—ã`, {
            parse_mode: 'HTML'
        })
    })

    .action('reminderButton', async (ctx) => {
        ctx.scene.enter('reminderScene')
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π`, {
            parse_mode: 'HTML'
        })
    })

    .action('attendanceButton', async (ctx) => {
        ctx.scene.enter('attendanceScene')
        await bot.telegram.sendMessage(-984580648, `<b>@${ctx.from.username}</b> –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –æ—Ç–º–µ—Ç–æ–∫`, {
            parse_mode: 'HTML'
        })
    })


bot.launch();
